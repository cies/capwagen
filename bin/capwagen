#!/usr/bin/env ruby

require 'capwagen/version'

require 'optparse'
require 'fileutils'


OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename($0)} [path]"

  opts.on("-h", "--help", "Displays this help info") do
    puts opts
    exit 0
  end

  opts.on("-v", "--version", "") do
    puts "capwagen v#{Capwagen::VERSION}"
    exit 0
  end

  begin
    opts.parse!(ARGV)
  rescue OptionParser::ParseError => e
    warn e.message
    puts opts
    exit 1
  end
end

if ARGV.empty?
  abort "Please specify the directory to capwagen, e.g. `#{File.basename($0)} .'"
elsif !File.exists?(ARGV.first)
  abort "`#{ARGV.first}' does not exist."
elsif !File.directory?(ARGV.first)
  abort "`#{ARGV.first}' is not a directory."
elsif ARGV.length > 1
  abort "Too many arguments; please specify only the directory to capwagen."
end

def unindent(string)
  indentation = string[/\A\s*/]
  string.strip.gsub(/^#{indentation}/, "")
end

base = ARGV.shift

files = {
  "Capfile" => unindent(<<-FILE),
    load 'deploy'

    require 'capwagen'
    load 'cap/deploy'
  FILE

  "cap/deploy.rb" => unindent(<<-FILE)
    set :repository,  "REPOSITORY_URL"
    set :scm,         :git

    role :web,        "domain.ext", :primary => true
    set :deploy_to,   "/path/to/application"

    # if you want to clean up old releases on each deploy uncomment this:
    # after "deploy:restart", "deploy:cleanup"

    # Be more verbose by uncommenting the following line
    # logger.level = Logger::MAX_LEVEL
  FILE
}

files.each do |file, content|
  file = File.join(base, file)
  if File.exists?(file)
    warn "[skip] '#{file}' already exists"
  elsif File.exists?(file.downcase)
    warn "[skip] '#{file.downcase}' exists, which could conflict with `#{file}'"
  else
    unless File.exists?(File.dirname(file))
      puts "[add] making directory '#{File.dirname(file)}'"
      FileUtils.mkdir_p(File.dirname(file))
    end
    puts "[add] writing '#{file}'"
    File.open(file, "w") { |f| f.write(content) }
  end
end

puts "[done] Kraftwagen project capwagened!"